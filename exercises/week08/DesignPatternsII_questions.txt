(Definitions are largely taken from the original Design Patterns, Gang of Four
book)

Q1(a)
The Strategy Design Pattern involves defining a family of algorithms,
encapsulating each one, and making them interchangeable. The algorithm can then
vary independently from clients that use it.

The implementation can be selected dynamically at runtime.

Clients do not need to know how operations are implemented.


Q1(b)
The Design Patterns book suggests it is appropriate to use the Strategy pattern
when:

 - A group of related classes differ only in their behaviours

 - Different versions of an algorithm are required

 - A class defines many behaviours in multiple conditional statements. Related
 conditional branches can be moved into their own Strategy class

 e.g. different sorting algorithms for different types of data,
 different parsers, etc.


Q3
It is appropriate to use an Abstract Factory Pattern when:

 - a system should be independent of how its products are created, composed and
 represented

 - a system should be configured with one of multiple families of products

 - a family of related product objects is designed to be used together and you
 need to enforce this constraint

 - you want to provide a class library of products and you want to reveal just
 their interfaces, not their implementations

 An interface is provided for creating families of related or dependent objects
 without specifying their concrete classes

Q5
“In general, the details of object construction, such as instantiating and
initialising the components that comprise the object, are kept within the
object, often as part of its constructor.”

Comment on this statement with reference to modularity and construction bloat.

The construction of complex objects can get very unwieldy with many different
elements to initialise and instantiate, particularly if a variety of different
representations are required.

The Builder pattern separates the construction of a complex object from its
representation, so that the same construction process can create different
representations.
